/*!
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.dev/license
 */
import { NgFor, NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, DestroyRef, ElementRef, ViewChild, inject, signal, } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { MatTabGroup, MatTabsModule } from '@angular/material/tabs';
import { debounceTime, map } from 'rxjs';
import { TerminalType } from '../services/terminal-handler.service';
import { EmbeddedTutorialManager } from '../services/embedded-tutorial-manager.service';
import { CodeMirrorEditor } from './services/code-mirror-editor.service';
import { DiagnosticsState } from './services/diagnostics-state.service';
import { DownloadManager } from '../services/download-manager.service';
import { IconComponent } from '../../components/icon/icon.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/tabs";
export const REQUIRED_FILES = new Set(['src/main.ts', 'src/index.html']);
export class CodeEditor {
    constructor() {
        this.destroyRef = inject(DestroyRef);
        this.codeMirrorEditor = inject(CodeMirrorEditor);
        this.diagnosticsState = inject(DiagnosticsState);
        this.downloadManager = inject(DownloadManager);
        this.embeddedTutorialManager = inject(EmbeddedTutorialManager);
        this.errors$ = this.diagnosticsState.diagnostics$.pipe(
        // Display errors one second after code update
        debounceTime(1000), map((diagnosticsItem) => diagnosticsItem
            .filter((item) => item.severity === 'error')
            .sort((a, b) => a.lineNumber != b.lineNumber
            ? a.lineNumber - b.lineNumber
            : a.characterPosition - b.characterPosition)), takeUntilDestroyed(this.destroyRef));
        this.TerminalType = TerminalType;
        this.displayErrorsBox = signal(false);
        this.errors = signal([]);
        this.files = this.codeMirrorEditor.openFiles;
        this.isCreatingFile = signal(false);
    }
    set setFileInputRef(element) {
        if (element) {
            element.nativeElement.focus();
            this.createFileInputRef = element;
        }
    }
    ngAfterViewInit() {
        this.codeMirrorEditor.init(this.codeEditorWrapperRef.nativeElement);
        this.listenToDiagnosticsChange();
        this.listenToTabChange();
        this.setSelectedTabOnTutorialChange();
    }
    ngOnDestroy() {
        this.codeMirrorEditor.disable();
    }
    async downloadCurrentCodeEditorState() {
        const name = this.embeddedTutorialManager.tutorialId();
        await this.downloadManager.downloadCurrentStateOfTheSolution(name);
    }
    closeErrorsBox() {
        this.displayErrorsBox.set(false);
    }
    canDeleteFile(filename) {
        return !REQUIRED_FILES.has(filename);
    }
    async deleteFile(filename) {
        await this.codeMirrorEditor.deleteFile(filename);
        this.matTabGroup.selectedIndex = 0;
    }
    onAddButtonClick() {
        this.isCreatingFile.set(true);
        this.matTabGroup.selectedIndex = this.files().length;
    }
    async createFile(event) {
        if (!this.createFileInputRef)
            return;
        event.preventDefault();
        const newFileInputValue = this.createFileInputRef.nativeElement.value;
        if (newFileInputValue) {
            if (newFileInputValue.includes('..')) {
                alert('File name can not contain ".."');
                return;
            }
            // src is hidden from users, here we manually add it to the new filename
            const newFile = 'src/' + newFileInputValue;
            if (this.files().find(({ filename }) => filename.includes(newFile))) {
                alert('File already exists');
                return;
            }
            await this.codeMirrorEditor.createFile(newFile);
        }
        this.isCreatingFile.set(false);
    }
    listenToDiagnosticsChange() {
        this.errors$.subscribe((diagnostics) => {
            this.errors.set(diagnostics);
            this.displayErrorsBox.set(diagnostics.length > 0);
        });
    }
    setSelectedTabOnTutorialChange() {
        this.embeddedTutorialManager.tutorialChanged$
            .pipe(takeUntilDestroyed(this.destroyRef))
            .subscribe(() => {
            // selected file on project change is always the first
            this.matTabGroup.selectedIndex = 0;
        });
    }
    listenToTabChange() {
        this.matTabGroup.selectedIndexChange
            .pipe(takeUntilDestroyed(this.destroyRef))
            .subscribe((index) => {
            const selectedFile = this.files()[index];
            if (selectedFile) {
                this.codeMirrorEditor.changeCurrentFile(selectedFile.filename);
            }
        });
    }
}
CodeEditor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.0-next.1", ngImport: i0, type: CodeEditor, deps: [], target: i0.ɵɵFactoryTarget.Component });
CodeEditor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.1.0-next.1", type: CodeEditor, isStandalone: true, selector: "docs-tutorial-code-editor", viewQueries: [{ propertyName: "codeEditorWrapperRef", first: true, predicate: ["codeEditorWrapper"], descendants: true }, { propertyName: "matTabGroup", first: true, predicate: MatTabGroup, descendants: true }, { propertyName: "setFileInputRef", first: true, predicate: ["createFileInput"], descendants: true }], ngImport: i0, template: "<!-- Code Editor Tabs -->\n<div class=\"adev-code-editor-tabs\">\n  <div class=\"adev-tabs-and-plus\">\n    <mat-tab-group animationDuration=\"0ms\" mat-stretch-tabs=\"false\">\n      <!--\n        Hint: we would like to keep only one instance of #codeEditorWrapper,\n        that's why we're not placing this element as content of mat-tab, just to\n        not call another time init method from CodeMirrorEditor service.\n      -->\n      @for (file of files(); track file) {\n      <mat-tab #tab>\n        <ng-template mat-tab-label>\n          {{ file.filename.replace('src/', '') }}\n          @if (tab.isActive && canDeleteFile(file.filename)) {\n          <button\n            class=\"adev-delete-file\"\n            aria-label=\"Delete file\"\n            (click)=\"deleteFile(file.filename)\"\n          >\n            <docs-icon>delete</docs-icon>\n          </button>\n          }\n        </ng-template>\n      </mat-tab>\n      } @if (isCreatingFile()) {\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <form (submit)=\"createFile($event)\">\n            <input\n              name=\"new-file\"\n              class=\"adev-new-file-input\"\n              #createFileInput\n              (keydown)=\"$event.stopPropagation()\"\n            />\n          </form>\n        </ng-template>\n      </mat-tab>\n      }\n    </mat-tab-group>\n\n    <button class=\"adev-add-file\" (click)=\"onAddButtonClick()\" aria-label=\"Add a new file\">\n      <docs-icon>add</docs-icon>\n    </button>\n  </div>\n\n  <button\n    class=\"adev-editor-download-button\"\n    type=\"button\"\n    (click)=\"downloadCurrentCodeEditorState()\"\n    aria-label=\"Download current code in editor\"\n  >\n    <docs-icon>download</docs-icon>\n  </button>\n</div>\n<!-- Code Editor -->\n<div #codeEditorWrapper class=\"adev-code-editor-wrapper\"></div>\n\n@if (displayErrorsBox()) {\n<div class=\"adev-inline-errors-box\">\n  <button type=\"button\" (click)=\"closeErrorsBox()\">\n    <docs-icon class=\"docs-icon_high-contrast\">close</docs-icon>\n  </button>\n  <ul>\n    @for (error of errors(); track error) {\n    <li>(line: {{ error.lineNumber }}:{{ error.characterPosition }}) {{ error.message }}</li>\n    }\n  </ul>\n</div>\n}\n", styles: [":host{--code-editor-selection-background: color-mix( in srgb, var(--selection-background) 5%, var(--octonary-contrast) );--code-editor-focused-selection-background: color-mix( in srgb, var(--selection-background) 12%, var(--octonary-contrast) );--code-editor-text-base-color: var(--primary-contrast);--code-editor-tooltip-background: color-mix( in srgb, var(--bright-blue), var(--page-background) 90% );--code-editor-tooltip-color: var(--primary-contrast);--code-editor-tooltip-border: 1px solid color-mix(in srgb, var(--bright-blue), var(--page-background) 70%);--code-editor-tooltip-border-radius: 0.25rem;--code-editor-autocomplete-item-background: var(--senary-contrast);--code-editor-autocomplete-item-color: var(--primary-contrast);--code-name: var(--primary-contrast);--code-editor-cursor-color: var(--code-name);--code-variable-name: var(--bright-blue);--code-property-name: var(--code-name);--code-definition-keyword: var(--electric-violet);--code-comment: var(--electric-violet);--code-line-comment: var(--symbolic-gray);--code-block-comment: var(--symbolic-brown);--code-doc-comment: var(--code-comment);--code-keyword: var(--electric-violet);--code-modifier: var(--code-keyword);--code-operator-keyword: var(--code-keyword);--code-control-keyword: var(--code-keyword);--code-module-keyword: var(--code-keyword);--code-brace: var(--vivid-pink);--code-bool: var(--bright-blue);--code-string: var(--orange-red);--code-regexp: var(--orange-red);--code-tags: var(--bright-blue);--code-component: var(--primary-contrast);--code-type-name: var(--vivid-pink);--code-self: var(--orange-red);position:relative}.adev-code-editor-tabs{display:flex;background:var(--octonary-contrast);border-block-end:1px solid var(--senary-contrast);transition:background .3s ease,border .3s ease}.adev-tabs-and-plus{display:flex;width:calc(100% - 2.875rem);min-height:48px}.adev-add-file docs-icon,.adev-delete-file docs-icon{color:var(--gray-400);transition:color .3s ease;font-size:1.2rem}.adev-add-file:hover docs-icon,.adev-delete-file:hover docs-icon{color:var(--primary-contrast)}.adev-delete-file{padding-inline-start:.1rem;padding-inline-end:0;margin-block-start:.2rem}.adev-delete-file docs-icon{font-size:1rem}.adev-new-file-input{color:var(--primary-contrast);border:none;border-radius:0;border-block-end:1px solid var(--senary-contrast);background:rgba(0,0,0,0);outline:none;transition:color .3s ease}.adev-new-file-input:focus{background:rgba(0,0,0,0);border-block-end:1px solid var(--primary-contrast)}.adev-code-editor-wrapper{height:calc(100% - 49px)}.adev-code-editor-wrapper-hidden{display:none}.adev-inline-errors-box{position:absolute;bottom:.5rem;left:.5rem;right:.5rem;padding:.25rem;background-color:color-mix(in srgb, var(--bright-blue), var(--page-background) 90%);border:1px solid color-mix(in srgb, var(--bright-blue), var(--page-background) 70%);border-radius:.25rem}.adev-inline-errors-box button{position:absolute;top:0;right:0;padding:.25rem}.adev-inline-errors-box button docs-icon{font-size:1.25rem;color:var(--quaternary-contrast);transition:color .3s ease}.adev-inline-errors-box button:hover docs-icon{color:var(--primary-contrast)}.adev-inline-errors-box ul{padding:0;margin:0;margin-inline:1.25rem;color:var(--tertiary-contrast);max-height:200px;overflow:auto}.adev-editor-download-button{padding:0;width:2.875rem;border-radius:0 .19rem 0 0;background:var(--octonary-contrast);border-inline-start:1px solid var(--senary-contrast)}.adev-editor-download-button docs-icon{color:var(--gray-400);transition:color .3s ease;font-size:1.3rem}.adev-editor-download-button:hover docs-icon{color:var(--primary-contrast)}/*# sourceMappingURL=code-editor.component.css.map */\n"], dependencies: [{ kind: "ngmodule", type: MatTabsModule }, { kind: "directive", type: i1.MatTabLabel, selector: "[mat-tab-label], [matTabLabel]" }, { kind: "component", type: i1.MatTab, selector: "mat-tab", inputs: ["disabled", "label", "aria-label", "aria-labelledby", "labelClass", "bodyClass"], exportAs: ["matTab"] }, { kind: "component", type: i1.MatTabGroup, selector: "mat-tab-group", inputs: ["color", "fitInkBarToContent", "mat-stretch-tabs", "dynamicHeight", "selectedIndex", "headerPosition", "animationDuration", "contentTabIndex", "disablePagination", "disableRipple", "preserveContent", "backgroundColor"], outputs: ["selectedIndexChange", "focusChange", "animationDone", "selectedTabChange"], exportAs: ["matTabGroup"] }, { kind: "component", type: IconComponent, selector: "docs-icon" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.0-next.1", ngImport: i0, type: CodeEditor, decorators: [{
            type: Component,
            args: [{ selector: 'docs-tutorial-code-editor', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, imports: [NgIf, NgFor, MatTabsModule, IconComponent], template: "<!-- Code Editor Tabs -->\n<div class=\"adev-code-editor-tabs\">\n  <div class=\"adev-tabs-and-plus\">\n    <mat-tab-group animationDuration=\"0ms\" mat-stretch-tabs=\"false\">\n      <!--\n        Hint: we would like to keep only one instance of #codeEditorWrapper,\n        that's why we're not placing this element as content of mat-tab, just to\n        not call another time init method from CodeMirrorEditor service.\n      -->\n      @for (file of files(); track file) {\n      <mat-tab #tab>\n        <ng-template mat-tab-label>\n          {{ file.filename.replace('src/', '') }}\n          @if (tab.isActive && canDeleteFile(file.filename)) {\n          <button\n            class=\"adev-delete-file\"\n            aria-label=\"Delete file\"\n            (click)=\"deleteFile(file.filename)\"\n          >\n            <docs-icon>delete</docs-icon>\n          </button>\n          }\n        </ng-template>\n      </mat-tab>\n      } @if (isCreatingFile()) {\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <form (submit)=\"createFile($event)\">\n            <input\n              name=\"new-file\"\n              class=\"adev-new-file-input\"\n              #createFileInput\n              (keydown)=\"$event.stopPropagation()\"\n            />\n          </form>\n        </ng-template>\n      </mat-tab>\n      }\n    </mat-tab-group>\n\n    <button class=\"adev-add-file\" (click)=\"onAddButtonClick()\" aria-label=\"Add a new file\">\n      <docs-icon>add</docs-icon>\n    </button>\n  </div>\n\n  <button\n    class=\"adev-editor-download-button\"\n    type=\"button\"\n    (click)=\"downloadCurrentCodeEditorState()\"\n    aria-label=\"Download current code in editor\"\n  >\n    <docs-icon>download</docs-icon>\n  </button>\n</div>\n<!-- Code Editor -->\n<div #codeEditorWrapper class=\"adev-code-editor-wrapper\"></div>\n\n@if (displayErrorsBox()) {\n<div class=\"adev-inline-errors-box\">\n  <button type=\"button\" (click)=\"closeErrorsBox()\">\n    <docs-icon class=\"docs-icon_high-contrast\">close</docs-icon>\n  </button>\n  <ul>\n    @for (error of errors(); track error) {\n    <li>(line: {{ error.lineNumber }}:{{ error.characterPosition }}) {{ error.message }}</li>\n    }\n  </ul>\n</div>\n}\n", styles: [":host{--code-editor-selection-background: color-mix( in srgb, var(--selection-background) 5%, var(--octonary-contrast) );--code-editor-focused-selection-background: color-mix( in srgb, var(--selection-background) 12%, var(--octonary-contrast) );--code-editor-text-base-color: var(--primary-contrast);--code-editor-tooltip-background: color-mix( in srgb, var(--bright-blue), var(--page-background) 90% );--code-editor-tooltip-color: var(--primary-contrast);--code-editor-tooltip-border: 1px solid color-mix(in srgb, var(--bright-blue), var(--page-background) 70%);--code-editor-tooltip-border-radius: 0.25rem;--code-editor-autocomplete-item-background: var(--senary-contrast);--code-editor-autocomplete-item-color: var(--primary-contrast);--code-name: var(--primary-contrast);--code-editor-cursor-color: var(--code-name);--code-variable-name: var(--bright-blue);--code-property-name: var(--code-name);--code-definition-keyword: var(--electric-violet);--code-comment: var(--electric-violet);--code-line-comment: var(--symbolic-gray);--code-block-comment: var(--symbolic-brown);--code-doc-comment: var(--code-comment);--code-keyword: var(--electric-violet);--code-modifier: var(--code-keyword);--code-operator-keyword: var(--code-keyword);--code-control-keyword: var(--code-keyword);--code-module-keyword: var(--code-keyword);--code-brace: var(--vivid-pink);--code-bool: var(--bright-blue);--code-string: var(--orange-red);--code-regexp: var(--orange-red);--code-tags: var(--bright-blue);--code-component: var(--primary-contrast);--code-type-name: var(--vivid-pink);--code-self: var(--orange-red);position:relative}.adev-code-editor-tabs{display:flex;background:var(--octonary-contrast);border-block-end:1px solid var(--senary-contrast);transition:background .3s ease,border .3s ease}.adev-tabs-and-plus{display:flex;width:calc(100% - 2.875rem);min-height:48px}.adev-add-file docs-icon,.adev-delete-file docs-icon{color:var(--gray-400);transition:color .3s ease;font-size:1.2rem}.adev-add-file:hover docs-icon,.adev-delete-file:hover docs-icon{color:var(--primary-contrast)}.adev-delete-file{padding-inline-start:.1rem;padding-inline-end:0;margin-block-start:.2rem}.adev-delete-file docs-icon{font-size:1rem}.adev-new-file-input{color:var(--primary-contrast);border:none;border-radius:0;border-block-end:1px solid var(--senary-contrast);background:rgba(0,0,0,0);outline:none;transition:color .3s ease}.adev-new-file-input:focus{background:rgba(0,0,0,0);border-block-end:1px solid var(--primary-contrast)}.adev-code-editor-wrapper{height:calc(100% - 49px)}.adev-code-editor-wrapper-hidden{display:none}.adev-inline-errors-box{position:absolute;bottom:.5rem;left:.5rem;right:.5rem;padding:.25rem;background-color:color-mix(in srgb, var(--bright-blue), var(--page-background) 90%);border:1px solid color-mix(in srgb, var(--bright-blue), var(--page-background) 70%);border-radius:.25rem}.adev-inline-errors-box button{position:absolute;top:0;right:0;padding:.25rem}.adev-inline-errors-box button docs-icon{font-size:1.25rem;color:var(--quaternary-contrast);transition:color .3s ease}.adev-inline-errors-box button:hover docs-icon{color:var(--primary-contrast)}.adev-inline-errors-box ul{padding:0;margin:0;margin-inline:1.25rem;color:var(--tertiary-contrast);max-height:200px;overflow:auto}.adev-editor-download-button{padding:0;width:2.875rem;border-radius:0 .19rem 0 0;background:var(--octonary-contrast);border-inline-start:1px solid var(--senary-contrast)}.adev-editor-download-button docs-icon{color:var(--gray-400);transition:color .3s ease;font-size:1.3rem}.adev-editor-download-button:hover docs-icon{color:var(--primary-contrast)}/*# sourceMappingURL=code-editor.component.css.map */\n"] }]
        }], propDecorators: { codeEditorWrapperRef: [{
                type: ViewChild,
                args: ['codeEditorWrapper']
            }], matTabGroup: [{
                type: ViewChild,
                args: [MatTabGroup]
            }], setFileInputRef: [{
                type: ViewChild,
                args: ['createFileInput']
            }] } });
//# sourceMappingURL=data:application/json;base64,