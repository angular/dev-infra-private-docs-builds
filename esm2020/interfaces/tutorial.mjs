/*!
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.dev/license
 */
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHV0b3JpYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9kb2NzL2ludGVyZmFjZXMvdHV0b3JpYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuZGV2L2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQgdHlwZSB7RmlsZVN5c3RlbVRyZWV9IGZyb20gJ0B3ZWJjb250YWluZXIvYXBpJztcbmltcG9ydCB7TmF2aWdhdGlvbkl0ZW19IGZyb20gJy4vbmF2aWdhdGlvbi1pdGVtJztcblxuLyoqIHRoZSBzdGVwIGlzIHVzZWQgb25seSBpbiB0aGlzIGZ1bmN0aW9uIHRvIHNvcnQgdGhlIG5hdiBpdGVtcyAqL1xuZXhwb3J0IHR5cGUgVHV0b3JpYWxOYXZpZ2F0aW9uSXRlbVdpdGhTdGVwID0gVHV0b3JpYWxOYXZpZ2F0aW9uSXRlbSAmIHtcbiAgdHV0b3JpYWxEYXRhOiBUdXRvcmlhbE5hdmlnYXRpb25EYXRhICYge1xuICAgIHN0ZXA6IFR1dG9yaWFsU3RlcFsnc3RlcCddO1xuICB9O1xufTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBjb250ZW50cyBvZiB0aGUgdHV0b3JpYWwgZmlsZXMgdG8gYmUgZ2VuZXJhdGVkIGJ5IHRoZSBidWlsZCBzY3JpcHRcbiAqL1xuZXhwb3J0IHR5cGUgVHV0b3JpYWxGaWxlcyA9IHtcbiAgc291cmNlQ29kZT86IEZpbGVTeXN0ZW1UcmVlO1xuICBtZXRhZGF0YT86IFR1dG9yaWFsTWV0YWRhdGE7XG4gIHNvdXJjZUNvZGVaaXA/OiBCdWZmZXI7XG4gIHJvdXRlPzogT21pdDxUdXRvcmlhbE5hdmlnYXRpb25JdGVtV2l0aFN0ZXAsICdwYXRoJz47XG59O1xuXG5leHBvcnQgdHlwZSBQbGF5Z3JvdW5kRmlsZXMgPSB7XG4gIHNvdXJjZUNvZGU/OiBGaWxlU3lzdGVtVHJlZTtcbiAgbWV0YWRhdGE/OiBUdXRvcmlhbE1ldGFkYXRhO1xuICBzb3VyY2VDb2RlWmlwPzogdW5kZWZpbmVkO1xuICByb3V0ZT86IFBsYXlncm91bmRSb3V0ZURhdGE7XG59O1xuXG4vKiogUmVwcmVzZW50cyB0aGUgY29udGVudHMgb2YgdGhlIHR1dG9yaWFsIGNvbmZpZyBmaWxlICovXG5leHBvcnQgdHlwZSBUdXRvcmlhbE1ldGFkYXRhID0ge1xuICB0eXBlOiBUdXRvcmlhbENvbmZpZ1sndHlwZSddO1xuXG4gIC8qKiBhIHJlY29yZCBvZiBhbGwgdHV0b3JpYWxzIGZpbGVuYW1lcyBhbmQgaXRzIGNvbnRlbnRzICovXG4gIHR1dG9yaWFsRmlsZXM6IEZpbGVBbmRDb250ZW50UmVjb3JkO1xuXG4gIC8qKiBhIHJlY29yZCBvZiBmaWxlbmFtZXMgYW5kIGNvbnRlbnRzIGZvciB0aGUgdHV0b3JpYWwgYW5zd2VyICovXG4gIGFuc3dlckZpbGVzPzogRmlsZUFuZENvbnRlbnRSZWNvcmQ7XG5cbiAgLyoqIGZpbGVzIHRoYXQgYXJlIHBhcnQgb2YgdGhlIHByb2plY3QgYnV0IGFyZSBub3QgdmlzaWJsZSBpbiB0aGUgY29kZSBlZGl0b3IgKi9cbiAgaGlkZGVuRmlsZXM6IHN0cmluZ1tdO1xuXG4gIC8qKlxuICAgKiBBbGwgZmlsZXMgaW4gdGhlIHByb2plY3QsIHVzZWQgdG8gZmluZCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIG5ldyBhbmQgb2xkIHByb2plY3RzXG4gICAqIHdoZW4gY2hhbmdpbmcgcHJvamVjdHNcbiAgICovXG4gIGFsbEZpbGVzOiBzdHJpbmdbXTtcblxuICBvcGVuRmlsZXM6IE5vbk51bGxhYmxlPFR1dG9yaWFsQ29uZmlnWydvcGVuRmlsZXMnXT47XG5cbiAgLyoqIHdoZXRoZXIgYSBwYWNrYWdlLmpzb24gZXhpc3RzICovXG4gIGRlcGVuZGVuY2llcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG59O1xuXG5leHBvcnQgdHlwZSBUdXRvcmlhbFN0ZXAgPSB7XG4gIHN0ZXA6IG51bWJlcjtcbiAgbmFtZTogc3RyaW5nO1xuICBwYXRoOiBzdHJpbmc7XG4gIHVybDogc3RyaW5nO1xuICBuZXh0U3RlcD86IFR1dG9yaWFsU3RlcFsndXJsJ107XG4gIHByZXZpb3VzU3RlcD86IFR1dG9yaWFsU3RlcFsndXJsJ107XG4gIG5leHRUdXRvcmlhbD86IHN0cmluZztcbn07XG5cbmV4cG9ydCB0eXBlIFR1dG9yaWFsQ29uZmlnID1cbiAgfCBFZGl0b3JUdXRvcmlhbENvbmZpZ1xuICB8IExvY2FsVHV0b3JpYWxDb25maWdcbiAgfCBDbGlUdXRvcmlhbENvbmZpZ1xuICB8IEVkaXRvck9ubHlUdXRvcmlhbENvbmZpZztcblxuZXhwb3J0IGludGVyZmFjZSBUdXRvcmlhbENvbmZpZ0Jhc2Uge1xuICB0eXBlOiBUdXRvcmlhbFR5cGU7XG5cbiAgLyoqIFRoZSB0dXRvcmlhbCB0aXRsZSAqL1xuICB0aXRsZTogc3RyaW5nO1xuXG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgdHV0b3JpYWwgZm9sZGVyIHRoYXQgd2lsbCBiZSBzdGFydGVkIGFmdGVyIHRoZSBjdXJyZW50IG9uZSBlbmRzLiAqL1xuICBuZXh0VHV0b3JpYWw/OiBzdHJpbmc7XG5cbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSB0dXRvcmlhbCBzcmMgZm9sZGVyIHdoZW4gaXQncyBleHRlcm5hbCB0byB0aGUgdHV0b3JpYWwgKi9cbiAgc3JjPzogc3RyaW5nO1xuXG4gIC8qKiBUaGUgcGF0aCB0byB0aGUgdHV0b3JpYWwgYW5zd2VyIGZvbGRlciB3aGVuIGl0J3MgZXh0ZXJuYWwgdG8gdGhlIHR1dG9yaWFsICovXG4gIGFuc3dlclNyYz86IHN0cmluZztcblxuICAvKiogQW4gYXJyYXkgb2YgZmlsZXMgdG8gYmUgb3BlbiBpbiB0aGUgZWRpdG9yICovXG4gIG9wZW5GaWxlcz86IHN0cmluZ1tdO1xufVxuXG4vKiogUmVwcmVzZW50cyBhIHR1dG9yaWFsIGNvbmZpZyB3aXRoIGFsbCB0aGUgZW1iZWRkZWQgZWRpdG9yIGNvbXBvbmVudHMgZW5hYmxlZCAqL1xuZXhwb3J0IGludGVyZmFjZSBFZGl0b3JUdXRvcmlhbENvbmZpZyBleHRlbmRzIFR1dG9yaWFsQ29uZmlnQmFzZSB7XG4gIHR5cGU6IFR1dG9yaWFsVHlwZS5FRElUT1I7XG59XG5cbi8qKiBSZXByZXNlbnRzIGEgdHV0b3JpYWwgY29uZmlnIHRoYXQgd29uJ3QgdXNlIHRoZSBlbWJlZGRlZCBlZGl0b3IgKi9cbmV4cG9ydCBpbnRlcmZhY2UgTG9jYWxUdXRvcmlhbENvbmZpZyBleHRlbmRzIFR1dG9yaWFsQ29uZmlnQmFzZSB7XG4gIHR5cGU6IFR1dG9yaWFsVHlwZS5MT0NBTDtcblxuICAvLyBmaWVsZHMgdGhhdCBtdXN0IGJlIHVuZGVmaW5lZCBmb3IgbG9jYWwgYXBwIHR1dG9yaWFsc1xuICBvcGVuRmlsZXM/OiB1bmRlZmluZWQ7XG4gIHNyYz86IHVuZGVmaW5lZDtcbiAgYW5zd2VyU3JjPzogdW5kZWZpbmVkO1xufVxuXG4vKiogUmVwcmVzZW50cyBhIHR1dG9yaWFsIGNvbmZpZyB0aGF0IHN1cHBvcnRzIG9ubHkgdGhlIGludGVyYWN0aXZlIHRlcm1pbmFsIGZvciB0aGUgQW5ndWxhciBDTEkgKi9cbmV4cG9ydCB0eXBlIENsaVR1dG9yaWFsQ29uZmlnID0gT21pdDxMb2NhbFR1dG9yaWFsQ29uZmlnLCAndHlwZSc+ICYge1xuICB0eXBlOiBUdXRvcmlhbFR5cGUuQ0xJO1xufTtcblxuZXhwb3J0IHR5cGUgRWRpdG9yT25seVR1dG9yaWFsQ29uZmlnID0gT21pdDxFZGl0b3JUdXRvcmlhbENvbmZpZywgJ3R5cGUnPiAmIHtcbiAgdHlwZTogVHV0b3JpYWxUeXBlLkVESVRPUl9PTkxZO1xufTtcblxuZXhwb3J0IHR5cGUgRmlsZUFuZENvbnRlbnQgPSB7XG4gIHBhdGg6IHN0cmluZztcbiAgY29udGVudDogc3RyaW5nIHwgQnVmZmVyO1xufTtcblxuZXhwb3J0IHR5cGUgRmlsZUFuZENvbnRlbnRSZWNvcmQgPSBSZWNvcmQ8RmlsZUFuZENvbnRlbnRbJ3BhdGgnXSwgRmlsZUFuZENvbnRlbnRbJ2NvbnRlbnQnXT47XG5cbmV4cG9ydCB0eXBlIFR1dG9yaWFsTmF2aWdhdGlvbkl0ZW0gPSB7XG4gIHBhdGg6IE5vbk51bGxhYmxlPE5hdmlnYXRpb25JdGVtWydwYXRoJ10+O1xuICBsYWJlbDogTm9uTnVsbGFibGU8TmF2aWdhdGlvbkl0ZW1bJ2xhYmVsJ10+O1xuICBjaGlsZHJlbj86IFR1dG9yaWFsTmF2aWdhdGlvbkl0ZW1bXTtcbiAgcGFyZW50PzogVHV0b3JpYWxOYXZpZ2F0aW9uSXRlbTtcbiAgY29udGVudFBhdGg/OiBzdHJpbmc7XG4gIHR1dG9yaWFsRGF0YTogVHV0b3JpYWxOYXZpZ2F0aW9uRGF0YTtcbn07XG5cbmV4cG9ydCB0eXBlIFR1dG9yaWFsTmF2aWdhdGlvbkRhdGEgPSB7XG4gIHR5cGU6IFR1dG9yaWFsQ29uZmlnWyd0eXBlJ107XG4gIHRpdGxlOiBUdXRvcmlhbENvbmZpZ1sndGl0bGUnXTtcbiAgbmV4dFN0ZXA/OiBzdHJpbmc7XG4gIHByZXZpb3VzU3RlcD86IHN0cmluZztcbiAgbmV4dFR1dG9yaWFsPzogc3RyaW5nO1xuICBzb3VyY2VDb2RlWmlwUGF0aD86IHN0cmluZztcbn07XG5cbmV4cG9ydCB0eXBlIFBsYXlncm91bmRSb3V0ZURhdGEgPSB7XG4gIHRlbXBsYXRlczogUGxheWdyb3VuZFRlbXBsYXRlW107XG4gIGRlZmF1bHRUZW1wbGF0ZT86IFBsYXlncm91bmRUZW1wbGF0ZTtcbiAgc3RhcnRlclRlbXBsYXRlPzogUGxheWdyb3VuZFRlbXBsYXRlO1xufTtcblxuZXhwb3J0IHR5cGUgUGxheWdyb3VuZFRlbXBsYXRlID0gUmVxdWlyZWQ8UGljazxOYXZpZ2F0aW9uSXRlbSwgJ3BhdGgnIHwgJ2xhYmVsJz4+O1xuXG4vLyBOb3RlOiBvbmx5IHRoZSBmaWVsZHMgYmVpbmcgdXNlZCBhcmUgZGVmaW5lZCBpbiB0aGlzIHR5cGVcbmV4cG9ydCBpbnRlcmZhY2UgUGFja2FnZUpzb24ge1xuICBkZXBlbmRlbmNpZXM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG4gIGRldkRlcGVuZGVuY2llczogUmVjb3JkPHN0cmluZywgc3RyaW5nPjtcbn1cblxuZXhwb3J0IGNvbnN0IGVudW0gVHV0b3JpYWxUeXBlIHtcbiAgQ0xJID0gJ2NsaScsXG4gIExPQ0FMID0gJ2xvY2FsJyxcbiAgRURJVE9SID0gJ2VkaXRvcicsXG4gIEVESVRPUl9PTkxZID0gJ2VkaXRvci1vbmx5Jyxcbn1cbiJdfQ==